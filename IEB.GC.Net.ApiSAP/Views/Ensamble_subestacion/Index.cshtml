@model IEnumerable<IEB.GC.Net.ApiSAP.Models.Ensamble_subestacion>

@{
    ViewBag.Title = "Index";
}

<h2>Ensamble</h2>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-12">
        <h3>Información General</h3>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index","Inicio")">Inicio</a>
            </li>
            <li>
                <a href="@Url.Action("Detalles","Inicio", new {id=int.Parse(TempData.Peek("id").ToString())})">Detalle subestación</a>
            </li>
            <li>
                <a href="@Url.Action("ingresarcaso", "Inicio", new { id = int.Parse(TempData.Peek("id_caso").ToString()) })"> Detalle caso </a>
            </li>
            <li>
                <a href="@Url.Action("Index","Materials", new { id=int.Parse(TempData.Peek("id").ToString())})">Material</a>
            </li>
            <li>
                <a href="@Url.Action("Index","Perfiles", new {id=int.Parse(TempData.Peek("id").ToString())})">Perfiles</a>
            </li>
            <li>
                <a href="@Url.Action("Index","Cargas_Automatica", new { id_subestacion=int.Parse(TempData.Peek("id").ToString())})">Cargas Automaticas</a>
            </li>
            <li>
                <a href="@Url.Action("Index","Elemento", new { sid=int.Parse(TempData.Peek("id_caso").ToString())})">Elementos</a>
            </li>
            <li>
                <a href="@Url.Action("Index","CARGAS_DE_CONEXIÓN", new { id=int.Parse(TempData.Peek("id_caso").ToString())})">Cargas de conexion</a>
            </li>
            <li>
                <strong class="active">Ensamble</strong>                
            </li>
            
        </ol>
        <p></p>
    </div>
</div>
<p>
    @Html.ActionLink("Crear un nuevo subensamble", "Create")
</p>
<table class="table text-center">
    <tr>
        
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Elemento)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.X)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Y)
        </th>
        <th class="text-center">
            @Html.DisplayNameFor(model => model.Z)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.Divisiones)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.Orientacion_viga)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.id_Caso)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.Elemento1.Id_Elemento)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        
        <td>
            @Html.DisplayFor(modelItem => item.Elemento)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.X)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Y)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Z)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.Divisiones)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.Orientacion_viga)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.id_Caso)
        </td>*@        
        <td>
            @Html.ActionLink("Editar", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Borrar", "Delete", new { id=item.Id }) |
            <a href='@Url.Action("Index","Cargas", new {id_ensamble= item.Id})'>Agregar Cargas</a>
            
        </td>
    </tr>
}

</table>

<div>
    <a href="@Url.Action("ingresarcaso","Inicio", new {id=int.Parse(TempData.Peek("id_caso").ToString())})">Regresar</a>
</div>