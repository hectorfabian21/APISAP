@model IEB.GC.Net.ApiSAP.Models.Elemento

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Elemento</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Id_Elemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id_Elemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id_Elemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TipoElemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.DropDownListFor(model => model.TipoElemento, new SelectList(new List<Object>
                {new {value="Elemento Portico",text="Elemento Portico" },
                new {value="Elemento", text="Elemento" },
                new {value="Elemento Equipo", text="Elemento Equipo" }}, "value", "text"),
                new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TipoElemento, "", new { @class = "text-danger" })
                
                @Html.ValidationMessageFor(model => model.TipoElemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroCuerpos, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroCuerpos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroCuerpos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Id_Proyectos, "Id_Proyectos", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Id_Proyectos, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id_Proyectos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NivelTension, "Nivel Tension", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NivelTension, new SelectList(new List<Object>
                { new {value="34.5 kV",text= "34.5 kV" },
                  new {value="115 kV", text= "115 kV" },
                  new {value="220 kV", text= "220 kV" },
                  new {value="500 kV", text= "500 kV" } }, "value", "text"),
                  new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NivelTension, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
