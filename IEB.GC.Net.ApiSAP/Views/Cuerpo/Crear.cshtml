@model IEB.GC.Net.ApiSAP.Models.CuerposDeElemento

@{
    ViewBag.Title = "Crear";    
}

<h2>Agregar nuevo cuerpo</h2>
<h4>Cuerpo</h4>
<span class="success" style="color:green">
    @TempData["guardado"].ToString()
</span>

<div class="col-md-12">

    <div class="col-md-6">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id_Elemento)

                <div class="form-group">
                    @Html.LabelFor(model => model.TipoDeElemento, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.TipoDeElemento, new SelectList(new List<Object>
                {
                  new {value="",text="Seleccione una opción" },
                  new {value="Cuerpo de transicion",text="Cuerpo de transicion" },
                  new {value="Cuerpo de conexion viga", text="Cuerpo de conexion viga" },
                  new {value="Cuerpo de castillete", text="Cuerpo de castillete" },
                  new {value="Cuerpo viga", text="Cuerpo viga" }}, "value", "text"),
                  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TipoDeElemento, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable anchoInferior">
                    @Html.LabelFor(model => model.Ancho_inferior, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Ancho_inferior, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ancho_inferior, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable largoInferior">
                    @Html.LabelFor(model => model.Largo_Inferior, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Largo_Inferior, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Largo_Inferior, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable anchoSuperior">
                    @Html.LabelFor(model => model.Ancho_superior, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Ancho_superior, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ancho_superior, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable largoSuperior">
                    @Html.LabelFor(model => model.Largo_Superior, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Largo_Superior, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Largo_Superior, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable Altura">
                    @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable Nivel_de_tension">
                    @Html.LabelFor(model => model.Nivel_de_tension, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Nivel_de_tension, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nivel_de_tension, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable Tipo_de_diagonal">
                    @Html.LabelFor(model => model.Tipo_de_diagonal, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.Tipo_de_diagonal, new SelectList(new List<Object>
                { new {value="Z",text="Z" },
                  new {value="X", text="X" }}, "value", "text"),
                  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Tipo_de_diagonal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable Division_adicional">
                    @Html.LabelFor(model => model.Division_adicional, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Division_adicional, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Division_adicional, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilMontante">
                    @Html.LabelFor(model => model.PerfilMontante, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.PerfilMontante, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilMontante, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilMontante, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilDiagonarl">
                    @Html.LabelFor(model => model.PerfilDiagonarl, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.PerfilDiagonarl, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilDiagonarl, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilDiagonarl, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable perfilMontanteViga">
                    @Html.LabelFor(model => model.PerfilMontanteViga, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @* @Html.EditorFor(model => model.PerfilMontanteViga, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilMontanteViga, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilMontanteViga, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilDiagonalViga">
                    @Html.LabelFor(model => model.PerfilDiagonalViga, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @* @Html.EditorFor(model => model.PerfilDiagonalViga, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilDiagonalViga, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilDiagonalViga, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilCierre">
                    @Html.LabelFor(model => model.PerfilCierre, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @* @Html.EditorFor(model => model.PerfilCierre, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilCierre, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilCierre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilMontanteCastillete">
                    @Html.LabelFor(model => model.PerfilMontanteCastillete, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.PerfilMontanteCastillete, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilMontanteCastillete, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilMontanteCastillete, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ocultable PerfilDiagonalCastillete">
                    @Html.LabelFor(model => model.PerfilDiagonalCastillete, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @*@Html.EditorFor(model => model.PerfilDiagonalCastillete, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.PerfilDiagonalCastillete, (SelectList)ViewBag.ListaPerfiles, "Por defecto", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PerfilDiagonalCastillete, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.HiddenFor(model => model.Id_Elemento)

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="CrearCuerpo" type="submit" value="Guardar" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Regresar", "Index", new { IdElemento = int.Parse(TempData.Peek("IdElemento").ToString()) })
        </div>
    </div>
    <div class="col-md-6">
        <div class="ocultable Cuerpos">
            <img src="~/img/Cuerpos.JPG" style="width:100%" />
        </div>
        <div class="ocultable Ctransicion">
            <img src="~/img/C. transicion.JPG" style="width:70%"/>
        </div>
        <div class="ocultable vigaconexion">
            <img src="~/img/C. vigaconexion.JPG" style="width:100%"/>
        </div>
        <div class="ocultable castillete">
            <img src="~/img/c. castillete.JPG" style="width:100%" />
        </div>
        <div class="ocultable viga">
            <img src="~/img/c.viga.JPG" style="width:100%"/>
        </div>            
    </div>


</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script type="text/javascript">
        $(document).ready(function () {
            var tipoElemento = $("#TipoDeElemento").val();
            if (tipoElemento==""){
                $(".ocultable").each(function () {
                    $(this).addClass("hidden");
                    $(".Cuerpos").removeClass("hidden");
                });
            } else {
                if (tipoElemento == "Cuerpo de transicion") {
                    $(".anchoInferior").removeClass("hidden");
                    $(".largoInferior").removeClass("hidden");
                    $(".anchoSuperior").removeClass("hidden");
                    $(".largoSuperior").removeClass("hidden");
                    $(".Altura").removeClass("hidden");
                    $(".Nivel_de_tension").addClass("hidden");
                    $(".Tipo_de_diagonal").removeClass("hidden");
                    $(".Division_adicional").removeClass("hidden");
                    $(".PerfilMontante").removeClass("hidden");
                    $(".PerfilDiagonarl").removeClass("hidden");
                    $(".perfilMontanteViga").addClass("hidden");
                    $(".PerfilDiagonalViga").addClass("hidden");
                    $(".PerfilCierre").addClass("hidden");
                    $(".PerfilMontanteCastillete").addClass("hidden");
                    $(".PerfilDiagonalCastillete").addClass("hidden");
                    $("#PerfilMontanteViga").val("");
                    $("#PerfilDiagonalViga").val("");
                    $("#PerfilCierre").val("");
                    $("#PerfilMontanteCastillete").val("");
                    $("#PerfilDiagonalCastillete").val("");
                    $(".Cuerpos").addClass("hidden");
                    $(".Ctransicion").removeClass("hidden");
                    $(".vigaconexion").addClass("hidden");
                    $(".castillete").addClass("hidden");
                    $(".viga").addClass("hidden");
                    

                }
                else if (tipoElemento == "Cuerpo de conexion viga") {
                    $(".anchoInferior").removeClass("hidden");
                    $(".largoInferior").removeClass("hidden");
                    $("#Ancho_superior").val($("#Ancho_inferior").val())
                    $("#Largo_Superior").val($("#Largo_Inferior").val())
                    $(".anchoSuperior").addClass("hidden");
                    $(".largoSuperior").addClass("hidden");
                    $(".Altura").removeClass("hidden");
                    $(".Nivel_de_tension").addClass("hidden");
                    $(".Tipo_de_diagonal").removeClass("hidden");
                    $(".Division_adicional").removeClass("hidden");
                    $(".PerfilMontante").removeClass("hidden");
                    $(".PerfilDiagonarl").removeClass("hidden");
                    $(".perfilMontanteViga").removeClass("hidden");
                    $(".PerfilDiagonalViga").removeClass("hidden");
                    $(".PerfilCierre").addClass("hidden");
                    $(".PerfilMontanteCastillete").addClass("hidden");
                    $(".PerfilDiagonalCastillete").addClass("hidden");
                    $("#PerfilCierre").val("");
                    $("#PerfilMontanteCastillete").val("");
                    $("#PerfilDiagonalCastillete").val("");

                }
                else if (tipoElemento == "Cuerpo de castillete") {
                    $(".anchoInferior").removeClass("hidden");
                    $(".largoInferior").removeClass("hidden");
                    $(".anchoSuperior").addClass("hidden");
                    $("#Ancho_superior").val(0) // aplicar para cada elemento que se oculta
                    $(".largoSuperior").addClass("hidden");
                    $("#Largo_Superior").val(0) // aplicar para cada elemento que se oculta
                    $(".Altura").removeClass("hidden");
                    $(".Nivel_de_tension").addClass("hidden");
                    $(".Tipo_de_diagonal").removeClass("hidden");
                    $(".Division_adicional").removeClass("hidden");
                    $(".PerfilMontante").addClass("hidden");
                    $(".PerfilDiagonarl").addClass("hidden");
                    $(".perfilMontanteViga").addClass("hidden");
                    $(".PerfilDiagonalViga").addClass("hidden");
                    $(".PerfilCierre").addClass("hidden");
                    $(".PerfilMontanteCastillete").removeClass("hidden");
                    $(".PerfilDiagonalCastillete").removeClass("hidden");
                    $("#PerfilMontante").val("");
                    $("#PerfilDiagonarl").val("");
                    $("#PerfilMontanteViga").val("");
                    $("#PerfilDiagonalViga").val("");
                    $("#PerfilCierre").val("");
                }
                //else if (tipoElemento == "Cuerpo de transicion viga") {
                //    $(".anchoInferior").removeClass("hidden");
                //    $(".largoInferior").removeClass("hidden");
                //    $(".anchoSuperior").removeClass("hidden");
                //    $(".largoSuperior").removeClass("hidden");
                //    $(".Altura").removeClass("hidden");
                //    $(".Nivel_de_tension").addClass("hidden");
                //    $(".Tipo_de_diagonal").removeClass("hidden");
                //    $(".Division_adicional").removeClass("hidden");
                //    $(".PerfilMontante").removeClass("hidden");
                //    $(".PerfilDiagonarl").addClass("hidden");
                //    $(".perfilMontanteViga").removeClass("hidden");
                //    $(".PerfilDiagonalViga").removeClass("hidden");
                //    $(".PerfilCierre").removeClass("hidden");
                //    $(".PerfilMontanteCastillete").addClass("hidden");
                //    $(".PerfilDiagonalCastillete").addClass("hidden");
                //    $("#PerfilMontante").val("");
                //    $("#PerfilDiagonarl :selected").text("Por defecto");
                //    $("#PerfilMontanteCastillete :selected").text("Por defecto");
                //    $("#PerfilDiagonalCastillete :selected").text("Por defecto");
                //}
                else if (tipoElemento == "Cuerpo viga") {
                    $(".anchoInferior").removeClass("hidden");
                    $(".largoInferior").removeClass("hidden");
                    $("#Ancho_superior").val($("#Ancho_inferior").val())
                    $("#Largo_Superior").val($("#Largo_Inferior").val())
                    $(".anchoSuperior").addClass("hidden");
                    $(".largoSuperior").addClass("hidden");
                    $(".Altura").removeClass("hidden");
                    $(".Nivel_de_tension").addClass("hidden");
                    $(".Tipo_de_diagonal").removeClass("hidden");
                    $(".Division_adicional").removeClass("hidden");
                    $(".PerfilMontante").addClass("hidden");
                    $(".PerfilDiagonarl").addClass("hidden");
                    $(".perfilMontanteViga").removeClass("hidden");
                    $(".PerfilDiagonalViga").removeClass("hidden");
                    $(".PerfilCierre").removeClass("hidden");
                    $(".PerfilMontanteCastillete").addClass("hidden");
                    $(".PerfilDiagonalCastillete").addClass("hidden");
                    $("#PerfilMontante").val("");
                    $("#PerfilDiagonarl").val("");
                    $("#PerfilMontanteCastillete").val("");
                    $("#PerfilDiagonalCastillete").val("");
                    $("#PerfilCierre").val("");
                }
            }
            //inicia la verificacion de evento del cambio del control desplegable de tipo de elemento
            $("#TipoDeElemento").change(function () {
                var tipoElemento = $("#TipoDeElemento").val();
                if (tipoElemento == "") {
                    $(".ocultable").each(function () {
                        $(this).addClass("hidden");
                        $(".Cuerpos").removeClass("hidden");
                    });
                } else {
                    if (tipoElemento == "Cuerpo de transicion") {
                        $(".anchoInferior").removeClass("hidden");
                        $(".largoInferior").removeClass("hidden");
                        $(".anchoSuperior").removeClass("hidden");
                        $(".largoSuperior").removeClass("hidden");
                        $(".Altura").removeClass("hidden");
                        $(".Nivel_de_tension").addClass("hidden");
                        $(".Tipo_de_diagonal").removeClass("hidden");
                        $(".Division_adicional").removeClass("hidden");
                        $(".PerfilMontante").removeClass("hidden");
                        $(".PerfilDiagonarl").removeClass("hidden");
                        $(".perfilMontanteViga").addClass("hidden");
                        $(".PerfilDiagonalViga").addClass("hidden");
                        $(".PerfilCierre").addClass("hidden");
                        $(".PerfilMontanteCastillete").addClass("hidden");
                        $(".PerfilDiagonalCastillete").addClass("hidden");
                        $("#PerfilMontanteViga").val("");
                        $("#PerfilDiagonalViga").val("");
                        $("#PerfilCierre").val("");
                        $("#PerfilMontanteCastillete").val("");
                        $("#PerfilDiagonalCastillete").val("");
                        $(".Cuerpos").addClass("hidden");
                        $(".Ctransicion").removeClass("hidden");
                        $(".vigaconexion").addClass("hidden");
                        $(".castillete").addClass("hidden");
                        $(".viga").addClass("hidden");

                    } else if (tipoElemento == "Cuerpo de conexion viga") {
                        $(".anchoInferior").removeClass("hidden");
                        $(".largoInferior").removeClass("hidden");
                        $("#Ancho_superior").val($("#Ancho_inferior").val())
                        $("#Largo_Superior").val($("#Largo_Inferior").val())
                        $(".anchoSuperior").addClass("hidden");
                        $(".largoSuperior").addClass("hidden");
                        $(".Altura").removeClass("hidden");
                        $(".Nivel_de_tension").addClass("hidden");
                        $(".Tipo_de_diagonal").removeClass("hidden");
                        $(".Division_adicional").removeClass("hidden");
                        $(".PerfilMontante").removeClass("hidden");
                        $(".PerfilDiagonarl").removeClass("hidden");
                        $(".perfilMontanteViga").removeClass("hidden");
                        $(".PerfilDiagonalViga").removeClass("hidden");
                        $(".PerfilCierre").addClass("hidden");
                        $(".PerfilMontanteCastillete").addClass("hidden");
                        $(".PerfilDiagonalCastillete").addClass("hidden");
                        $("#PerfilCierre").val("");
                        $("#PerfilMontanteCastillete").val("");
                        $("#PerfilDiagonalCastillete").val("");
                        $(".Cuerpos").addClass("hidden");
                        $(".Ctransicion").addClass("hidden");
                        $(".vigaconexion").removeClass("hidden");
                        $(".castillete").addClass("hidden");
                        $(".viga").addClass("hidden");

                    }
                    else if (tipoElemento == "Cuerpo de castillete") {
                        $(".anchoInferior").removeClass("hidden");
                        $(".largoInferior").removeClass("hidden");
                        $(".anchoSuperior").addClass("hidden");
                        $("#Ancho_superior").val(0) // aplicar para cada elemento que se oculta
                        $(".largoSuperior").addClass("hidden");
                        $("#Largo_Superior").val(0) // aplicar para cada elemento que se oculta
                        $(".Altura").removeClass("hidden");
                        $(".Nivel_de_tension").addClass("hidden");
                        $(".Tipo_de_diagonal").removeClass("hidden");
                        $(".Division_adicional").removeClass("hidden");
                        $(".PerfilMontante").addClass("hidden");
                        $(".PerfilDiagonarl").addClass("hidden");
                        $(".perfilMontanteViga").addClass("hidden");
                        $(".PerfilDiagonalViga").addClass("hidden");
                        $(".PerfilCierre").addClass("hidden");
                        $(".PerfilMontanteCastillete").removeClass("hidden");
                        $(".PerfilDiagonalCastillete").removeClass("hidden");
                        $("#PerfilMontante").val("");
                        $("#PerfilDiagonarl").val("");
                        $("#PerfilMontanteViga").val("");
                        $("#PerfilDiagonalViga").val("");
                        $("#PerfilCierre").val("");
                        $(".Cuerpos").addClass("hidden");
                        $(".Ctransicion").addClass("hidden");
                        $(".vigaconexion").addClass("hidden");
                        $(".castillete").removeClass("hidden");
                        $(".viga").addClass("hidden");

                    }
                    //else if (tipoElemento == "Cuerpo de transicion viga") {
                    //    $(".anchoInferior").removeClass("hidden");
                    //    $(".largoInferior").removeClass("hidden");
                    //    $(".anchoSuperior").removeClass("hidden");
                    //    $(".largoSuperior").removeClass("hidden");
                    //    $(".Altura").removeClass("hidden");
                    //    $(".Nivel_de_tension").addClass("hidden");
                    //    $(".Tipo_de_diagonal").removeClass("hidden");
                    //    $(".Division_adicional").removeClass("hidden");
                    //    $(".PerfilMontante").removeClass("hidden");
                    //    $(".PerfilDiagonarl").addClass("hidden");
                    //    $(".perfilMontanteViga").removeClass("hidden");
                    //    $(".PerfilDiagonalViga").removeClass("hidden");
                    //    $(".PerfilCierre").removeClass("hidden");
                    //    $(".PerfilMontanteCastillete").addClass("hidden");
                    //    $(".PerfilDiagonalCastillete").addClass("hidden");
                    //    $("#PerfilMontante").val("");
                    //    $("#PerfilDiagonarl :selected").text("Por defecto");
                    //    $("#PerfilMontanteCastillete :selected").text("Por defecto");
                    //    $("#PerfilDiagonalCastillete :selected").text("Por defecto");
                    //}
                    else if (tipoElemento == "Cuerpo viga") {
                        $(".anchoInferior").removeClass("hidden");
                        $(".largoInferior").removeClass("hidden");
                        $("#Ancho_superior").val($("#Ancho_inferior").val())
                        $("#Largo_Superior").val($("#Largo_Inferior").val())
                        $(".anchoSuperior").addClass("hidden");
                        $(".largoSuperior").addClass("hidden");
                        $(".Altura").removeClass("hidden");
                        $(".Nivel_de_tension").addClass("hidden");
                        $(".Tipo_de_diagonal").removeClass("hidden");
                        $(".Division_adicional").removeClass("hidden");
                        $(".PerfilMontante").addClass("hidden");
                        $(".PerfilDiagonarl").addClass("hidden");
                        $(".perfilMontanteViga").removeClass("hidden");
                        $(".PerfilDiagonalViga").removeClass("hidden");
                        $(".PerfilCierre").removeClass("hidden");
                        $(".PerfilMontanteCastillete").addClass("hidden");
                        $(".PerfilDiagonalCastillete").addClass("hidden");
                        $("#PerfilMontante").val("");
                        $("#PerfilDiagonarl").val("");
                        $("#PerfilMontanteCastillete").val("");
                        $("#PerfilDiagonalCastillete").val("");
                        $("#PerfilCierre").val("");
                        $(".Cuerpos").addClass("hidden");
                        $(".Ctransicion").addClass("hidden");
                        $(".vigaconexion").addClass("hidden");
                        $(".castillete").addClass("hidden");
                        $(".viga").removeClass("hidden");
                    }
                }
            });
            $("#Ancho_inferior").change(function () {
                if (($("#TipoDeElemento").val() == "Cuerpo de conexion viga") || ($("#TipoDeElemento").val() == "Cuerpo viga")) {
                    $("#Ancho_superior").val($("#Ancho_inferior").val())
                }
            });
            $("#Largo_Inferior").change(function () {
                if (($("#TipoDeElemento").val() == "Cuerpo de conexion viga") || ($("#TipoDeElemento").val() == "Cuerpo viga")) {
                    $("#Largo_Superior").val($("#Largo_Inferior").val())
                }
            });
            var numeroCuerpo = parseInt(@TempData.Peek("NumeroCuerpo"));
            var nFilas = parseInt('@TempData["cuerpos"].ToString()');
            console.log("filas: " + nFilas);

            $("#CrearCuerpo").click(function (event){
                if (nFilas >= numeroCuerpo) {
                    alert("No se pueden agregar mas cuerpos");
                    event.preventDefault();
                    event.stopPropagation();
                }
            });
        });
        </script>

    }
